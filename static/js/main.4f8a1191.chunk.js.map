{"version":3,"sources":["Basket.js","Redux/Actions/index.js","App.js","reportWebVitals.js","Redux/Reducers/reducer.js","index.js"],"names":["Basket","onDelete","totalSum","products","items","useSelector","state","product","dispatch","useDispatch","sort","a","b","item","type","payload","headers","Object","keys","content","values","console","log","map","index","onClick","className","App","AddEntries","handleAddProduct","id","uniqid","Math","floor","random","length","price","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA0DeA,EArDA,SAAC,GAAuD,IAAvCC,EAAqBC,EAAiB,IAArDC,gBAAqD,MAA1C,GAA0C,MAAtCF,SAAsC,IAAjBC,SAC3CE,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WACrCC,EAAWC,cAEjBN,EAAWC,EAAMD,SACjBD,EAAWE,EAAMF,SAGjBC,EAASO,MAAK,SAACC,EAAEC,GACb,OAAKD,EAAEE,KAAOD,EAAEC,MACN,EAELF,EAAEE,KAAOD,EAAEC,KACP,EAEF,KAETZ,EAAW,SAACM,GACRC,EClB4B,CAClCM,KAAM,iBACNC,QDgB6BR,KAE7B,IAAMS,EAAUb,EAAS,IAAMc,OAAOC,KAAKf,EAAS,IAC9CgB,EAAUhB,EAAS,IAAMc,OAAOG,OAAOjB,GAE7C,OADAkB,QAAQC,IAAInB,GAER,gCACA,kCACA,gCACE,6BACGa,GAAWA,EAAQO,KAAI,SAACV,EAAMW,GAAP,OACtB,6BAAiBX,GAARW,UAIb,gCACGL,GAAWA,EAAQI,KAAI,SAACV,EAAMW,GAAP,OACtB,+BACGP,OAAOG,OAAOP,GAAMU,KAAI,SAACV,EAAMW,GAAP,OACvB,6BAAiBX,GAARW,MAEX,6BAAI,wBAAQC,QAAS,kBAAMxB,EAASY,IAAhC,wBAJGW,WASX,qBAAKE,UAAU,YAAf,SACI,wDAA2BxB,W,gBE3CrCE,EAAQ,CAAC,OAAQ,OAAQ,KAAM,SAAU,YAAY,WAAY,SAAU,WAAY,UAqC9EuB,MApBf,WACE,IAAMnB,EAAWC,cACjB,SAASmB,IACR,OAAQ,wBAAQd,KAAK,SAASW,QAAS,kBAAMI,KAArC,uBAET,IAAMA,EAAmB,WACvBrB,ED9BuC,CACzCM,KAAM,eACNC,QCUA,CAEEe,GAAIC,MACJlB,KAAMT,EAAM4B,KAAKC,MAAMD,KAAKE,SAAS9B,EAAM+B,SAC3CC,MAAOJ,KAAKC,MAAoB,IAAdD,KAAKE,cAgBzB,OACE,sBAAKR,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,YAAf,SACA,cAACE,EAAD,UC1BSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCNRQ,EAAe,CACjB3C,SAAU,GACVD,SAAU,GCQR6C,EAAWC,YAAgB,CAC/BzC,QDN4B,WAAmC,IAAlCD,EAAiC,uDAAzBwC,EAAcG,EAAW,uCAC5D,OAAQA,EAAOnC,MACX,IAAK,eACD,OAAO,2BACAR,GADP,IAEIH,SAAS,GAAD,mBAAMG,EAAMH,UAAZ,CAAqB8C,EAAOlC,UACpCb,SAAUI,EAAMJ,SAAW+C,EAAOlC,QAAQqB,QAIlD,IAAK,iBACD,OAAO,2BACA9B,GADP,IAEIH,SAAUG,EAAMH,SAAS+C,QAAO,SAAA3C,GAAO,OAAIA,EAAQuB,KAAOmB,EAAOlC,QAAQe,MACzE5B,SAAUI,EAAMJ,SAAW+C,EAAOlC,QAAQqB,QAElD,QACI,OAAO9B,MCRb6C,EAAQC,YAAYL,EACxBM,OAAOC,8BAAgCD,OAAOC,gCAEhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAIFO,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.4f8a1191.chunk.js","sourcesContent":["import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {deleteProduct} from './Redux/Actions'\n\n\nconst Basket = ({products = [], onDelete = Function, totalSum= 0}) => {\n    const items = useSelector((state) => state.product);\n    const dispatch = useDispatch();\n    \n    products = items.products;\n    totalSum = items.totalSum;\n    \n      \n    products.sort((a,b) => {\n        if ( a.item < b.item ){\n          return -1;\n        }\n        if ( a.item > b.item ){\n          return 1;\n        }\n        return 0;\n      })\n      onDelete = (product) => {\n          dispatch(deleteProduct(product));\n        }\n    const headers = products[0] && Object.keys(products[0]);\n    const content = products[0] && Object.values(products);\n    console.log(products);\n    return (\n        <div>\n        <table>\n        <thead>\n          <tr>\n            {headers && headers.map((item, index) => (\n              <th key={index}>{item}</th>\n            ))}\n          </tr>\n        </thead>\n          <tbody>\n            {content && content.map((item, index) => (\n              <tr key={index}>\n                {Object.values(item).map((item, index) => (\n                  <td key={index}>{item}</td>\n                ))}\n                <td><button onClick={() => onDelete(item)}>Delete</button></td>\n              </tr>\n            ))}\n          </tbody>\n      </table>\n            <div className=\"total-sum\">\n                <p>Total sum of products: {totalSum}</p>\n            </div>\n        </div>\n\n        \n    )\n}\n\nexport default Basket;","export const updateProduct = (product) => ({\n  type: 'GET_PRODUCTS',\n  payload: product,\n});\n\nexport const deleteProduct = (id) => ({\n    type: 'DELETE_PRODUCT',\n    payload: id,\n  });\n\n\n\n","import './App.css';\nimport Basket from './Basket'\nimport {useDispatch} from 'react-redux'\nimport {updateProduct} from './Redux/Actions'\nimport uniqid from 'uniqid';\n\n// Initialize random product names\nconst items = [\"Book\", \"Game\", \"TV\", \"Tablet\", \"Cellphone\",\"Computer\", \"Camera\", \"Recorder\", \"Screen\"]\n\n// function to generate random products\nconst randomProducts = () =>  {\nlet ranProduct = \n  {\n    // id: Math.floor(Math.random()*Math.random()*100), \n    id: uniqid(),\n    item: items[Math.floor(Math.random()*items.length)],\n    price: Math.floor(Math.random()*100),\n  }\n\nreturn ranProduct\n}\n\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  function AddEntries() {\n   return  <button type=\"button\" onClick={() => handleAddProduct()}>Add entry</button>\n  }\n  const handleAddProduct = () => {\n    dispatch(updateProduct(randomProducts()))\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"basket\">\n        <Basket />\n      </div>\n      <div className=\"add-entry\">\n      <AddEntries />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// create product reducer for redux\nconst initialState = {\n    products: [],\n    totalSum: 0,\n};\n\nexport const productReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'GET_PRODUCTS':\n            return {\n                ...state,\n                products: [...state.products,action.payload],\n                totalSum: state.totalSum + action.payload.price\n            };\n     \n\n        case 'DELETE_PRODUCT':\n            return {\n                ...state,\n                products: state.products.filter(product => product.id !== action.payload.id),\n                totalSum: state.totalSum - action.payload.price\n            };\n        default:\n            return state;\n        }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport {productReducer} from './Redux/Reducers/reducer'\nimport { createStore } from 'redux';\n\n\nconst reducers = combineReducers({\n  product: productReducer,\n});\n\nconst store = createStore(reducers, /* preloadedState, */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}